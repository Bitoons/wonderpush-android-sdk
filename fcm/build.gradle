apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0-SNAPSHOT"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':sdk')
    implementation "com.google.firebase:firebase-messaging:17.3.4"
}

if (file('local.gradle').exists()) {
    apply from: 'local.gradle'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xdiags:verbose"
}

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.github.dcendents.android-maven'

project.group = 'com.wonderpush'
project.archivesBaseName = 'wonderpush-android-sdk-fcm'
project.version = android.defaultConfig.versionName
def isSnapshot = version.endsWith('-SNAPSHOT')

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId = project.group
            artifactId = 'wonderpush-android-sdk-fcm'

            name 'WonderPush Android SDK FCM'
            description 'WonderPush Android SDK FCM'
            url 'https://github.com/wonderpush/wonderpush-android-sdk'

            scm {
                connection 'scm:git@github.com:wonderpush/wonderpush-android-sdk.git'
                developerConnection 'scm:git@github.com:wonderpush/wonderpush-android-sdk.git'
                url 'https://github.com/wonderpush/wonderpush-android-sdk'
            }

            licenses {
                license {
                    name 'Apache 2.0'
                    url 'https://github.com/wonderpush/wonderpush-android-sdk/blob/master/LICENSE.txt'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'wonderpush'
                    name 'WonderPush'
                }
            }
        }
    }
}

// uploadArchives

signing {
    required { !isSnapshot && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

task androidJavadocs(type: Javadoc) {
    title = 'WonderPush Android SDK FCM Reference'
    source = [] //android.sourceSets.main.java.srcDirs
    doFirst {
        classpath = project.files(
                project.android.libraryVariants.toList().first().javaCompileProvider.get().classpath.files,
                project.android.getBootClasspath(),
                "$projectDir/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes",
                "$projectDir/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes",
                android.sourceSets.main.java.srcDirs
        )
    }
    options.overview = project.rootDir.path + '/overview.html'
    options.showFromPublic()
    // JDK 1.8 is more strict then 1.7. Have JDK 1.8 behave like 1.7 for javadoc generation
    options.addStringOption('Xdoclint:none', '-quiet')
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
